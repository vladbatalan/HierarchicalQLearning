<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>Apache Maven Assembly Plugin</name>
  <description>A Maven plugin to create archives of your project&apos;s sources, classes, dependencies etc. from flexible assembly descriptors.</description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-assembly-plugin</artifactId>
  <version>3.3.0</version>
  <goalPrefix>assembly</goalPrefix>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-assembly-plugin.
Call mvn assembly:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.assembly.mojos.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>single</goal>
      <description>Assemble an application bundle or distribution from an assembly descriptor. This goal is suitable either for binding to the lifecycle or calling directly from the command line (provided all required files are available before the build starts, or are produced by another goal specified before this one on the command line).
Note that the parameters descriptors, descriptorRefs, and descriptorSourceDirectory are disjoint, i.e., they are not combined during descriptor location calculation.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>false</inheritedByDefault>
      <implementation>org.apache.maven.plugins.assembly.mojos.SingleAssemblyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>additionalProperties</name>
          <type>java.util.Properties</type>
          <since>3.3.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>A set of additional properties to use for filtering</description>
        </parameter>
        <parameter>
          <name>appendAssemblyId</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to false to exclude the assembly id from the assembly final name, and to create the resultant assembly artifacts without classifier. As such, an assembly artifact having the same format as the packaging of the current Maven project will replace the file for this main project artifact.</description>
        </parameter>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>This is a set of instructions to the archive builder, especially for building .jar files. It enables you to specify a Manifest file for the jar, in addition to other options. See Maven Archiver Reference.</description>
        </parameter>
        <parameter>
          <name>archiveBaseDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>This is the base directory from which archive files are created. This base directory pre-pended to any &lt;directory&gt; specifications in the assembly descriptor. This is an optional parameter.</description>
        </parameter>
        <parameter>
          <name>archiverConfig</name>
          <type>org.codehaus.plexus.configuration.PlexusConfiguration</type>
          <since>2.2-beta-3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Allows additional configuration options that are specific to a particular type of archive format. This is intended to capture an XML configuration that will be used to reflectively setup the options on the archiver instance.
To see the possible options for archiver configuration visit the Plexus Archiver Documentation
For instance, to direct an assembly with the &apos;ear&apos; format to use a particular deployment descriptor, you should specify the following for the archiverConfig value in your plugin configuration:

&lt;appxml&gt;${project.basedir}/somepath/app.xml&lt;/appxml&gt;
</description>
        </parameter>
        <parameter>
          <name>attach</name>
          <type>boolean</type>
          <since>2.2-beta-1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Controls whether the assembly plugin tries to attach the resulting assembly to the project.</description>
        </parameter>
        <parameter>
          <name>delimiters</name>
          <type>java.util.List</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set of delimiters for expressions to filter within the resources. These delimiters are specified in the form &apos;beginToken*endToken&apos;. If no &apos;*&apos; is given, the delimiter is assumed to be the same for start and end.

So, the default filtering delimiters might be specified as:

&lt;delimiters&gt;
  &lt;delimiter&gt;${*}&lt;/delimiter&gt;
  &lt;delimiter&gt;@&lt;/delimiter&gt;
&lt;/delimiters&gt;

Since the &apos;@&apos; delimiter is the same on both ends, we don&apos;t need to specify &apos;@*@&apos; (though we can).
</description>
        </parameter>
        <parameter>
          <name>descriptorRefs</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of references to assembly descriptors available on the plugin&apos;s classpath. The default classpath includes these built-in descriptors: bin, jar-with-dependencies, src, and project. You can add others by adding dependencies to the plugin.</description>
        </parameter>
        <parameter>
          <name>descriptors</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of descriptor files to generate from.</description>
        </parameter>
        <parameter>
          <name>descriptorSourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to scan for descriptor files in. NOTE: This may not work correctly with assembly components.</description>
        </parameter>
        <parameter>
          <name>dryRun</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If this flag is set, everything up to the call to Archiver.createArchive() will be executed.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>Expressions preceded with this String won&apos;t be interpolated. If you use &apos;\&apos; as the escape string then \${foo} will be replaced with ${foo}.</description>
        </parameter>
        <parameter>
          <name>filters</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>The list of extra filter properties files to be used along with System properties, project properties, and filter properties files specified in the POM build/filters section, which should be used for the filtering during the current mojo execution.
Normally, these will be configured from a plugin&apos;s execution section, to provide a different set of filters for a particular execution.</description>
        </parameter>
        <parameter>
          <name>formats</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the formats of the assembly. Multiple formats can be supplied and the Assembly Plugin will generate an archive for each desired formats. When deploying your project, all file formats specified will also be deployed. A format is specified by supplying one of the following values in a &lt;format&gt; subelement:
-	dir - Creates a directory
-	zip - Creates a ZIP file format
-	tar - Creates a TAR format
-	tar.gz or tgz - Creates a gzip&apos;d TAR format
-	tar.bz2 or tbz2 - Creates a bzip&apos;d TAR format
-	tar.snappy - Creates a snappy&apos;d TAR format
-	tar.xz or txz - Creates a xz&apos;d TAR format
</description>
        </parameter>
        <parameter>
          <name>ignoreDirFormatExtensions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If this flag is set, the &apos;.dir&apos; suffix will be suppressed in the output directory name when using assembly/format == &apos;dir&apos; and other formats that begin with &apos;dir&apos;.
NOTE: Since 2.2-beta-3, the default-value for this is true, NOT false as it used to be.</description>
        </parameter>
        <parameter>
          <name>ignoreMissingDescriptor</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true in order to not fail when a descriptor is missing.</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true in order to avoid all chmod calls.

NOTE: This will cause the assembly plugin to DISREGARD all fileMode/directoryMode settings in the assembly descriptor, and all file permissions in unpacked dependencies!
</description>
        </parameter>
        <parameter>
          <name>includeProjectBuildFilters</name>
          <type>boolean</type>
          <since>2.4.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>If True (default) then the ${project.build.filters} are also used in addition to any further filters defined for the Assembly.</description>
        </parameter>
        <parameter>
          <name>mergeManifestMode</name>
          <type>java.lang.String</type>
          <since>3</since>
          <required>false</required>
          <editable>true</editable>
          <description>sets the merge manifest mode in the JarArchiver</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The output directory of the assembled distribution file.</description>
        </parameter>
        <parameter>
          <name>outputTimestamp</name>
          <type>java.lang.String</type>
          <since>3.2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Timestamp for reproducible output archive entries, either formatted as ISO 8601 yyyy-MM-dd&apos;T&apos;HH:mm:ssXXX or as an int representing seconds since the epoch (like SOURCE_DATE_EPOCH).</description>
        </parameter>
        <parameter>
          <name>overrideGid</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override of group ID in archive type which can store it.</description>
        </parameter>
        <parameter>
          <name>overrideGroupName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override of group name in archive type which can store it.</description>
        </parameter>
        <parameter>
          <name>overrideUid</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override of user ID in archive type which can store it.</description>
        </parameter>
        <parameter>
          <name>overrideUserName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override of user name in archive type which can store it.</description>
        </parameter>
        <parameter>
          <name>recompressZippedFiles</name>
          <type>boolean</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates if zip archives (jar,zip etc) being added to the assembly should be compressed again. Compressing again can result in smaller archive size, but gives noticeably longer execution time.</description>
        </parameter>
        <parameter>
          <name>runOnlyAtExecutionRoot</name>
          <type>boolean</type>
          <since>2.2-beta-4</since>
          <required>false</required>
          <editable>true</editable>
          <description>This will cause the assembly to run only at the top of a given module tree. That is, run in the project contained in the same folder where the mvn execution was launched.</description>
        </parameter>
        <parameter>
          <name>skipAssembly</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag allowing one or more executions of the assembly plugin to be configured as skipped for a particular build. This makes the assembly plugin more controllable from profiles.</description>
        </parameter>
        <parameter>
          <name>tarLongFileMode</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the TarArchiver behavior on file paths with more than 100 characters length. Valid values are: &apos;warn&apos; (default), &apos;fail&apos;, &apos;truncate&apos;, &apos;gnu&apos;, &apos;posix&apos;, &apos;posix_warn&apos; or &apos;omit&apos;.</description>
        </parameter>
        <parameter>
          <name>updateOnly</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>This will cause the assembly to only update an existing archive, if it exists.
Note: The property that can be used on the command line was misspelled as &apos;assembly.updatOnly&apos; in versions prior to version 2.4.
</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <since>2.2</since>
          <deprecated>Not used anymore and will be removed in future version</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory to unpack JARs into if needed</description>
        </parameter>
      </parameters>
      <configuration>
        <appendAssemblyId implementation="boolean" default-value="true">${assembly.appendAssemblyId}</appendAssemblyId>
        <attach implementation="boolean" default-value="true">${assembly.attach}</attach>
        <dryRun implementation="boolean" default-value="false">${assembly.dryRun}</dryRun>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <escapeString implementation="java.lang.String">${assembly.escapeString}</escapeString>
        <ignoreDirFormatExtensions implementation="boolean" default-value="true"/>
        <ignoreMissingDescriptor implementation="boolean" default-value="false">${assembly.ignoreMissingDescriptor}</ignoreMissingDescriptor>
        <ignorePermissions implementation="boolean" default-value="false">${assembly.ignorePermissions}</ignorePermissions>
        <includeProjectBuildFilters implementation="boolean" default-value="true">${assembly.includeProjectBuildFilters}</includeProjectBuildFilters>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <outputTimestamp implementation="java.lang.String" default-value="${project.build.outputTimestamp}"/>
        <recompressZippedFiles implementation="boolean" default-value="true"/>
        <runOnlyAtExecutionRoot implementation="boolean" default-value="false">${assembly.runOnlyAtExecutionRoot}</runOnlyAtExecutionRoot>
        <skipAssembly implementation="boolean" default-value="false">${assembly.skipAssembly}</skipAssembly>
        <tarLongFileMode implementation="java.lang.String" default-value="warn">${assembly.tarLongFileMode}</tarLongFileMode>
        <updateOnly implementation="boolean" default-value="false">${assembly.updateOnly}</updateOnly>
        <useJvmChmod implementation="boolean" default-value="false">${assembly.useJvmChmod}</useJvmChmod>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/assembly/work"/>
      </configuration>
    </mojo>
  </mojos>
</plugin>